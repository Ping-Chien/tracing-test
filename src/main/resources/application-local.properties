# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:counterdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enable H2 console for development
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Keep JPA tables created and initialized
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

# 另一個 pod 的 base url
other.pod.url=http://app4:8080

# actuator 設定
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# application name
spring.application.name=tracing-test

# metrics tagging
management.metrics.tags.application=${spring.application.name}

# OTLP Metrics Export Configuration
management.otlp.metrics.export.enabled=true
management.otlp.metrics.export.url=http://otel-collector.opentelemetry.svc.cluster.local:4318
management.otlp.metrics.export.step=60s
management.otlp.metrics.export.resource-attributes.service.name=${spring.application.name}
management.otlp.metrics.export.resource-attributes.service.version=1.0.0
management.otlp.metrics.export.resource-attributes.service.instance.id=${spring.application.name}-${random.uuid}

# actuator 設定
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always

logging.level.io.micrometer=DEBUG
logging.level.io.opentelemetry=DEBUG
logging.level.org.springframework.boot.actuate.autoconfigure.metrics.export.otlp=DEBUG
logging.level.org.springframework.boot.actuate=DEBUG

# 設定應用程序包的日誌級別為DEBUG，以便查看詳細指標信息
logging.level.com.example.tracingtest=DEBUG
