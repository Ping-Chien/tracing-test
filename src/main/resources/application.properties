spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/counter
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# JPA 設定: 根據實體類自動建立或更新資料表
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

# 另一個 pod 的 base url
other.pod.url=http://app4:8080

# application name
spring.application.name=tracing-test

# metrics tagging
management.metrics.tags.application=${spring.application.name}

# OTLP Metrics Export Configuration
management.otlp.metrics.export.enabled=true
management.otlp.metrics.export.url=http://otel-collector.opentelemetry.svc.cluster.local:4318
management.otlp.metrics.export.step=60s
management.otlp.metrics.export.resource-attributes.service.name=${spring.application.name}

# actuator 設定
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always

# 啟用 Kubernetes 的 liveness 和 readiness 探針
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

logging.level.io.micrometer=DEBUG
logging.level.io.opentelemetry=DEBUG
logging.level.org.springframework.boot.actuate.autoconfigure.metrics.export.otlp=DEBUG
logging.level.org.springframework.boot.actuate=DEBUG